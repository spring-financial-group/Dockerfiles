apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/docker/pullrequest.yaml@versionStream
          name: ""
          resources:
            # override limits for all containers here
            limits: {}
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone-pr.yaml@versionStream
          name: ""
          resources: {}
        - name: jx-variables
          resources: {}
        - image: gcr.io/kaniko-project/executor:v1.8.0-debug
          name: build-containers
          resources: { }
          script: |
            #!/busybox/sh
            set -e
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson /kaniko/.docker/config.json
            
            for image in $(find . -maxdepth 1 -type d | sed 's|^./||' | grep -F -v .); do
              echo -e "\n------------------ BUILDING CONTAINER $image ------------------\n"
              /kaniko/executor $KANIKO_FLAGS --cleanup --context=/workspace/source/$image --dockerfile="Dockerfile" --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$image:$VERSION --no-push --tarPath "$image".tar
            done
        - image: ghcr.io/spring-financial-group/container-tools:latest
          name: push-containers
          resources: { }
          script: |
            #!/bin/bash
            set -e
            source .jx/variables.sh
            cp /tekton/creds-secrets/tekton-container-registry-auth/.dockerconfigjson ~/.docker/config.json
            
            for image in $(find . -maxdepth 1 -type d | sed 's|^./||' | grep -F -v .); do
              echo -e "\n------------------ PUSHING CONTAINER $image ------------------\n"
              # Update latest image
              crane push /workspace/source/"$image".tar $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$image:latest
              cosign sign --key k8s://jx-staging/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$image:latest
              cosign verify --key k8s://jx-staging/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$image:latest
            
              # Push versioned image
              crane push /workspace/source/"$image".tar $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$image:$VERSION
              cosign sign --key k8s://jx-staging/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$image:$VERSION
              cosign verify --key k8s://jx-staging/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$image:$VERSION
            done
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
