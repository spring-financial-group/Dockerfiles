apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: terra-test-pr
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/docker/pullrequest.yaml@versionStream
          name: ""
          resources:
            # override limits for all containers here
            limits: {}
          workingDir: /workspace/source
          env:
            - name: IMAGE_NAME
              value: terra-test
          volumeMounts:
          - mountPath: /temp-docker-config
            name: temp-docker-config
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone-pr.yaml@versionStream
          name: ""
          resources: {}
        - name: jx-variables
          resources: {}
        - image: gcr.io/kaniko-project/executor:v1.8.0-debug
          name: build-containers
          resources: {}
          script: |
            #!/busybox/sh
            set -e
            source .jx/variables.sh
            cp /temp-docker-config/config.json ~/.docker/config.json
            
            /kaniko/executor $KANIKO_FLAGS --cleanup --context=/workspace/source/$IMAGE_NAME --dockerfile="Dockerfile" --destination=$PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$IMAGE_NAME:$VERSION --no-push --tarPath $IMAGE_NAME.tar
        - image: ghcr.io/spring-financial-group/container-tools:latest
          name: push-containers
          resources: {}
          script: |
            #!/bin/bash
            set -e
            source .jx/variables.sh
            cp /temp-docker-config/config.json ~/.docker/config.json
            
            crane push /workspace/source/$IMAGE_NAME.tar $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$IMAGE_NAME:$VERSION
            cosign sign --key k8s://jx-staging/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$IMAGE_NAME:$VERSION
            cosign verify --key k8s://jx-staging/cosign $PUSH_CONTAINER_REGISTRY/$DOCKER_REGISTRY_ORG/$IMAGE_NAME:$VERSION
        volumes:
        - name: temp-docker-config
          secret:
            secretName: tekton-temp-registry-auth
            items:
            - key: .dockerconfigjson
              path: config.json
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
